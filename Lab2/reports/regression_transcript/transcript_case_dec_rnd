# 1
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:28:45 on Apr 02,2024
# vlog -sv -timescale 1ps/1ps -work work -f sources.txt 
# -- Compiling package instr_register_pkg
# -- Compiling module instr_register
# -- Importing package instr_register_pkg
# -- Compiling module top
# -- Compiling module instr_register_test
# 
# Top level modules:
# 	top
# End time: 21:28:46 on Apr 02,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vsim -novopt -quiet -nocoverage "+notimingchecks" "+nowarnTSCALE" -sva top -GWR_NR=30 -GRD_NR=30 -Gwrite_order=2 -Gread_order=1 
# Start time: 21:28:46 on Apr 02,2024
# 
# 
# ***********************************************************
# ***         THIS IS A SELF-CHECKING TESTBENCH.          ***
# ***********************************************************
# 
# Reseting the instruction register...
# 
# Writing values to register stack...
#  Test: operand_a = -12, operand_b = 7, opcode = 1 at time 36
# Writing to register location 31: 
#   opcode = 1 (PASSA)
#   operand_a = -12
#   operand_b = 7
# 
#  Test: operand_a = -9, operand_b = 1, opcode = 0 at time 46
# Writing to register location 30: 
#   opcode = 0 (ZERO)
#   operand_a = -9
#   operand_b = 1
# 
#  Test: operand_a = -15, operand_b = 8, opcode = 7 at time 56
# Writing to register location 29: 
#   opcode = 7 (MOD)
#   operand_a = -15
#   operand_b = 8
# 
#  Test: operand_a = -8, operand_b = 7, opcode = 5 at time 66
# Writing to register location 28: 
#   opcode = 5 (MULT)
#   operand_a = -8
#   operand_b = 7
# 
#  Test: operand_a = -9, operand_b = 5, opcode = 3 at time 76
# Writing to register location 27: 
#   opcode = 3 (ADD)
#   operand_a = -9
#   operand_b = 5
# 
#  Test: operand_a = 5, operand_b = 3, opcode = 4 at time 86
# Writing to register location 26: 
#   opcode = 4 (SUB)
#   operand_a = 5
#   operand_b = 3
# 
#  Test: operand_a = 3, operand_b = 12, opcode = 3 at time 96
# Writing to register location 25: 
#   opcode = 3 (ADD)
#   operand_a = 3
#   operand_b = 12
# 
#  Test: operand_a = 12, operand_b = 3, opcode = 6 at time 106
# Writing to register location 24: 
#   opcode = 6 (DIV)
#   operand_a = 12
#   operand_b = 3
# 
#  Test: operand_a = 3, operand_b = 14, opcode = 1 at time 116
# Writing to register location 23: 
#   opcode = 1 (PASSA)
#   operand_a = 3
#   operand_b = 14
# 
#  Test: operand_a = -2, operand_b = 9, opcode = 1 at time 126
# Writing to register location 22: 
#   opcode = 1 (PASSA)
#   operand_a = -2
#   operand_b = 9
# 
#  Test: operand_a = 9, operand_b = 9, opcode = 7 at time 136
# Writing to register location 21: 
#   opcode = 7 (MOD)
#   operand_a = 9
#   operand_b = 9
# 
#  Test: operand_a = 9, operand_b = 7, opcode = 3 at time 146
# Writing to register location 20: 
#   opcode = 3 (ADD)
#   operand_a = 9
#   operand_b = 7
# 
#  Test: operand_a = 7, operand_b = 3, opcode = 5 at time 156
# Writing to register location 19: 
#   opcode = 5 (MULT)
#   operand_a = 7
#   operand_b = 3
# 
#  Test: operand_a = 3, operand_b = 5, opcode = 7 at time 166
# Writing to register location 18: 
#   opcode = 7 (MOD)
#   operand_a = 3
#   operand_b = 5
# 
#  Test: operand_a = -11, operand_b = 15, opcode = 0 at time 176
# Writing to register location 17: 
#   opcode = 0 (ZERO)
#   operand_a = -11
#   operand_b = 15
# 
#  Test: operand_a = 15, operand_b = 0, opcode = 6 at time 186
# Writing to register location 16: 
#   opcode = 6 (DIV)
#   operand_a = 15
#   operand_b = 0
# 
#  Test: operand_a = 0, operand_b = 14, opcode = 4 at time 196
# Writing to register location 15: 
#   opcode = 4 (SUB)
#   operand_a = 0
#   operand_b = 14
# 
#  Test: operand_a = -2, operand_b = 4, opcode = 3 at time 206
# Writing to register location 14: 
#   opcode = 3 (ADD)
#   operand_a = -2
#   operand_b = 4
# 
#  Test: operand_a = -12, operand_b = 3, opcode = 0 at time 216
# Writing to register location 13: 
#   opcode = 0 (ZERO)
#   operand_a = -12
#   operand_b = 3
# 
#  Test: operand_a = -13, operand_b = 8, opcode = 4 at time 226
# Writing to register location 12: 
#   opcode = 4 (SUB)
#   operand_a = -13
#   operand_b = 8
# 
#  Test: operand_a = -8, operand_b = 12, opcode = 1 at time 236
# Writing to register location 11: 
#   opcode = 1 (PASSA)
#   operand_a = -8
#   operand_b = 12
# 
#  Test: operand_a = -4, operand_b = 1, opcode = 1 at time 246
# Writing to register location 10: 
#   opcode = 1 (PASSA)
#   operand_a = -4
#   operand_b = 1
# 
#  Test: operand_a = -15, operand_b = 1, opcode = 1 at time 256
# Writing to register location 9: 
#   opcode = 1 (PASSA)
#   operand_a = -15
#   operand_b = 1
# 
#  Test: operand_a = 1, operand_b = 1, opcode = 7 at time 266
# Writing to register location 8: 
#   opcode = 7 (MOD)
#   operand_a = 1
#   operand_b = 1
# 
#  Test: operand_a = 1, operand_b = 15, opcode = 5 at time 276
# Writing to register location 7: 
#   opcode = 5 (MULT)
#   operand_a = 1
#   operand_b = 15
# 
#  Test: operand_a = -1, operand_b = 5, opcode = 7 at time 286
# Writing to register location 6: 
#   opcode = 7 (MOD)
#   operand_a = -1
#   operand_b = 5
# 
#  Test: operand_a = 5, operand_b = 7, opcode = 4 at time 296
# Writing to register location 5: 
#   opcode = 4 (SUB)
#   operand_a = 5
#   operand_b = 7
# 
#  Test: operand_a = -9, operand_b = 4, opcode = 4 at time 306
# Writing to register location 4: 
#   opcode = 4 (SUB)
#   operand_a = -9
#   operand_b = 4
# 
#  Test: operand_a = 4, operand_b = 12, opcode = 5 at time 316
# Writing to register location 3: 
#   opcode = 5 (MULT)
#   operand_a = 4
#   operand_b = 12
# 
#  Test: operand_a = 12, operand_b = 5, opcode = 3 at time 326
# Writing to register location 2: 
#   opcode = 3 (ADD)
#   operand_a = 12
#   operand_b = 5
# 
# 
# Reading back the same register locations written...
# Read from register location 12: 
#   opcode = 4 (SUB)
#   operand_a = -13
#   operand_b = 8
#   rezultat = -21
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 24: 
#   opcode = 6 (DIV)
#   operand_a = 12
#   operand_b = 3
#   rezultat = 4
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 10: 
#   opcode = 1 (PASSA)
#   operand_a = -4
#   operand_b = 1
#   rezultat = -4
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 2: 
#   opcode = 3 (ADD)
#   operand_a = 12
#   operand_b = 5
#   rezultat = 17
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 14: 
#   opcode = 3 (ADD)
#   operand_a = -2
#   operand_b = 4
#   rezultat = 2
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 9: 
#   opcode = 1 (PASSA)
#   operand_a = -15
#   operand_b = 1
#   rezultat = -15
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 12: 
#   opcode = 4 (SUB)
#   operand_a = -13
#   operand_b = 8
#   rezultat = -21
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 23: 
#   opcode = 1 (PASSA)
#   operand_a = 3
#   operand_b = 14
#   rezultat = 3
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 17: 
#   opcode = 0 (ZERO)
#   operand_a = -11
#   operand_b = 15
#   rezultat = 0
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 13: 
#   opcode = 0 (ZERO)
#   operand_a = -12
#   operand_b = 3
#   rezultat = 0
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 22: 
#   opcode = 1 (PASSA)
#   operand_a = -2
#   operand_b = 9
#   rezultat = -2
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 3: 
#   opcode = 5 (MULT)
#   operand_a = 4
#   operand_b = 12
#   rezultat = 48
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 11: 
#   opcode = 1 (PASSA)
#   operand_a = -8
#   operand_b = 12
#   rezultat = -8
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 1: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
#   rezultat = 0
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 15: 
#   opcode = 4 (SUB)
#   operand_a = 0
#   operand_b = 14
#   rezultat = -14
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 13: 
#   opcode = 0 (ZERO)
#   operand_a = -12
#   operand_b = 3
#   rezultat = 0
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 17: 
#   opcode = 0 (ZERO)
#   operand_a = -11
#   operand_b = 15
#   rezultat = 0
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 15: 
#   opcode = 4 (SUB)
#   operand_a = 0
#   operand_b = 14
#   rezultat = -14
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 0: 
#   opcode = x ()
#   operand_a = x
#   operand_b = x
#   rezultat = x
# 
# Valoarea lui op_a NU este stocata corect
# 
# Valoarea lui op_b NU este stocata corect
# 
# Valoarea lui opc NU este stocata corect
# 
# Test failed (rezultat gresit)
# 
# Read from register location 22: 
#   opcode = 1 (PASSA)
#   operand_a = -2
#   operand_b = 9
#   rezultat = -2
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 15: 
#   opcode = 4 (SUB)
#   operand_a = 0
#   operand_b = 14
#   rezultat = -14
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 11: 
#   opcode = 1 (PASSA)
#   operand_a = -8
#   operand_b = 12
#   rezultat = -8
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 29: 
#   opcode = 7 (MOD)
#   operand_a = -15
#   operand_b = 8
#   rezultat = -7
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 7: 
#   opcode = 5 (MULT)
#   operand_a = 1
#   operand_b = 15
#   rezultat = 15
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 13: 
#   opcode = 0 (ZERO)
#   operand_a = -12
#   operand_b = 3
#   rezultat = 0
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 24: 
#   opcode = 6 (DIV)
#   operand_a = 12
#   operand_b = 3
#   rezultat = 4
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 10: 
#   opcode = 1 (PASSA)
#   operand_a = -4
#   operand_b = 1
#   rezultat = -4
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 24: 
#   opcode = 6 (DIV)
#   operand_a = 12
#   operand_b = 3
#   rezultat = 4
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 18: 
#   opcode = 7 (MOD)
#   operand_a = 3
#   operand_b = 5
#   rezultat = 3
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 17: 
#   opcode = 0 (ZERO)
#   operand_a = -11
#   operand_b = 15
#   rezultat = 0
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 25: 
#   opcode = 3 (ADD)
#   operand_a = 3
#   operand_b = 12
#   rezultat = 15
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# 
# 
# ***********************************************************
# ***         THIS IS A SELF-CHECKING TESTBENCH.          ***
# ***********************************************************
# 
# ***************************************************
# ***                  FINAL REPORT               ***
# ***************************************************
# Total number of errors encountered: 4
# There were 4 errors detected.
# *
# 
# ** Note: $finish    : ../lab01_testbench-interface/instr_register_test.sv(89)
#    Time: 656 ns  Iteration: 1  Instance: /top/test
# End time: 21:28:47 on Apr 02,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
