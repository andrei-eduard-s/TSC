# 1
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:01:22 on Apr 16,2024
# vlog -sv -timescale 1ps/1ps -work work -f sources.txt 
# -- Compiling package instr_register_pkg
# -- Compiling module instr_register
# -- Importing package instr_register_pkg
# -- Compiling module top
# -- Compiling module instr_register_test
# 
# Top level modules:
# 	top
# End time: 23:01:22 on Apr 16,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -novopt -quiet -nocoverage "+notimingchecks" "+nowarnTSCALE" -sva top -GTEST_NAME=case_dec_inc -GWR_NR=5 -GRD_NR=5 -Gwrite_order=2 -Gseed_val=77777 -Gread_order=0 
# Start time: 23:01:22 on Apr 16,2024
# 
# 
# ***********************************************************
# ***         THIS IS A SELF-CHECKING TESTBENCH.          ***
# ***********************************************************
# 
# Reseting the instruction register...
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# Am resetat locatia 0
# 
# Writing values to register stack...
#  Test: operand_a = 0, operand_b = 0, opcode = 8 at time 36
# Writing to register location 31: 
#   opcode = 8 (POW)
#   operand_a = 0
#   operand_b = 0
# 
#  Test: operand_a = 0, operand_b = 1, opcode = 3 at time 46
# Writing to register location 30: 
#   opcode = 3 (ADD)
#   operand_a = 0
#   operand_b = 1
# 
#  Test: operand_a = -15, operand_b = 10, opcode = 0 at time 56
# Writing to register location 29: 
#   opcode = 0 (ZERO)
#   operand_a = -15
#   operand_b = 10
# 
#  Test: operand_a = 10, operand_b = 12, opcode = 1 at time 66
# Writing to register location 28: 
#   opcode = 1 (PASSA)
#   operand_a = 10
#   operand_b = 12
# 
#  Test: operand_a = -4, operand_b = 12, opcode = 7 at time 76
# Writing to register location 27: 
#   opcode = 7 (MOD)
#   operand_a = -4
#   operand_b = 12
# 
# 
# Reading back the same register locations written...
# Read from register location 0: 
#   opcode = x ()
#   operand_a = x
#   operand_b = x
#   rezultat = x
# 
# Valoarea lui op_a NU este stocata corect
# 
# Valoarea lui op_b NU este stocata corect
# 
# Valoarea lui opc NU este stocata corect
# 
# Test failed (rezultat gresit)
# 
# Read from register location 1: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
#   rezultat = 0
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 2: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
#   rezultat = 0
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 3: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
#   rezultat = 0
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 4: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
#   rezultat = 0
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# Read from register location 5: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
#   rezultat = 0
# 
# Valoarea lui op_a este stocata corect
# 
# Valoarea lui op_b este stocata corect
# 
# Valoarea lui opc este stocata corect
# 
# Test passed (rezultat corect)
# 
# 
# 
# ***********************************************************
# ***         THIS IS A SELF-CHECKING TESTBENCH.          ***
# ***********************************************************
# 
# ***************************************************
# ***                  FINAL REPORT               ***
# ***************************************************
# Total number of errors encountered: 4
# There were 4 errors detected.
# *
# 
# ** Note: $finish    : ../lab01_testbench-interface/instr_register_test.sv(92)
#    Time: 156 ns  Iteration: 1  Instance: /top/test
# End time: 23:01:22 on Apr 16,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
